---
author: Edzer Pebesma
categories: r
comments: True
date: 12 March, 2019
layout: post
meta-json: {"layout":"post","categories":"r","date":"12 March, 2019","author":"Edzer Pebesma","comments":true,"title":"Wrapping up the stars project"}
title: Wrapping up the stars project
---

<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>
* TOC 
{:toc}

\[[view raw
Rmd](https://raw.githubusercontent.com//r-spatial/r-spatial.org/gh-pages/_rmd/2019-03-11-stars4.Rmd)\]

Summary
-------

This is the fourth blog on the
[stars](https://github.com/r-spatial/stars) project, an it completes the
R-Consortium funded project for *spatiotemporal tidy arrays with R*. It
reports on the current status of the project, and current development
directions. Although this project neds, With the release of stars 0.3 on
[CRAN](https://cran.r-project.org/web/packages/stars/index.html), the
adoption, update, enthusiasm and participation in the development of the
stars project have really only started, and will hopefully increase and
continue.

Status
------

The stars package has now five
[vignettes](https://r-spatial.github.io/stars/), called "Articles" on
the pkgdown site, which explain its main features. Besides writing these
vignettes, a lot of work over the past few months has gone into

-   making `stars_proxy` objects, objects for which the metadata has
    been read but for which the payload is still on disk, flexible and
    robust. Manipulating them adds operations to a call list, and only
    when pixel values are needed (e.g. by `plot` or `write_stars`)
    values are read, processed and written.
-   making rectilinear and curvilinear grids work, by better parsing
    NetCDF files directly (rather than through GDAL), reading their
    bounds, and by writing conversions to `sf` objects so that they can
    be plotted
-   writing a tighter integration with GDAL, e.g. for warping grids,
    contouring grids, and rasterizing polygons.
-   supporting 360-day and 365-day (noleap) calendars, which are used
    often in climate model data
-   providing an off-cran `starsdata` package, with around 1 Gb of real
    imagery, too large for submitting to CRAN or GitHub, but used for
    testing and demonstration
-   resolving issues (we're now at 143) and managing pull requests

Further resources on the status of the project can be found in

-   the
    [video](https://resources.rstudio.com/rstudio-conf-2019/spatial-data-science-in-the-tidyverse)
    of my rstudio::conf presentation on "Spatial data science in the
    Tidyverse"
-   [chapter 4](https://keen-swartz-3146c4.netlify.com/raster.html) of
    the Spatial Data Science book (under development)

Future
------

Future development will entail experiments with *very large* datasets,
such as the entire [Sentinel-2
archive](https://registry.opendata.aws/sentinel-2/). We secured earlier
some
[funding](https://github.com/r-spatial/stars/blob/master/documents/stars_data.md)
from the R Consortium for doing this, and first outcomes will be
presented shortly on a follow-up blog. A large challenge here is the
handling of multi-resolution imagery, imagery crossing multiple UTM
zones, and the temporal resampling needed to form space-time raster
cubes. This is being handled beautifully by the
[gdalcubes](https://github.com/appelmar/gdalcubes_R) C++ library and R
package developed by Marius Appel.

Earlier stars blogs
-------------------

-   [first](https://www.r-spatial.org/r/2017/11/23/stars1.html) stars
    blog
-   [second](https://www.r-spatial.org/r/2018/03/22/stars2.html) stars
    blog
-   [third](https://www.r-spatial.org/r/2018/03/23/stars3.html) stars
    blog
